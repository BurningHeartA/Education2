Курсовая: Экспериментальное исследование методов сортировки/хеширования/поиска/существующих библиотек, работающих с (мапы, листы, словари)

Что включает курсовой проект:
1. Введение (обоснование актуальности работы, формулировка цели и задач, которые необходимо решить в рамках курсового проекта) - 1..2 страницы.
Задачи:
 - а) обзор литературы (по этим алгоритмам). Все ссылки должны быть указаны, и описаны в списке литературы.
 - б) Глоссарий - основные определения и понятия, без которых ничего не понятно
 - в) Описание алгоритма, описание на псевдоязыке, например, разбор примера
 - г) анализ сортировки
(то есть количество глав по количеству исследуемых алгоритмов)

2. Разработка программного продукта
Система будет состоять из 2 частей - модуль генерации данных, модуль проведения эксперимента.
2.1 Описываем требования к генерации:
 - требования к входным данным
 - требования к выходным данным
 - функциональные данные
2.2 Описываем требования к экпериментатору:
 - требования к входным данным
 - требования к выходным данным
 - функциональные данные
2.3 Архитектура программного средства (рисуем схему, описываем)
2.4 Сценарий диалога (или руководство пользователю)

3. Проведение экспериментального исследования
Для каждого эксперимента описываем - цель, вход, выход, обоснование результата.
4. Анализ результатов эксперимента
Результаты экпериментов показали, что  вот такой алгоритм имеет сложность такую, применим для вот таких  задач
5. Список литературы (Витт, кнут, корман, чейз, )

Нюансы:
1. Необходимо всё привести к единой терминологии (сортируем один и тот же массив, называем элементы одними терминами, в общем терминология должна быть сквозной, сортировки (если это они) должна сортировать в едином порядке (возр/убыв)).
2. 

Отчет по курсовой: 
 - обязательно


Требования к генерации:
1. Длина генерируемой последовательности (например, n чисел)
2. Тип последовательности (если говорить про сортировки - возр/убыв/частично упор/упор/обр упор)
3. Структура генерируемого объекта
4. Необходимо реализовать возможность задавать формулу, по которой будет работать генерация (что-то вроде обратной польской записи для разбора)

Требования к выходным данным:
1. Хранить нагенерированное будем в файлах
2. Надо файлы как-то назвать, а именно:
 - какой тип сгенерированного объекта (последовательности)
 - какая длина последовательности
 - что-то типа reversed_100k? , или 100.up (чтобы фильтровать по расширению .up | .down соответственно)
3. Как будем поступать при генерировании файлов с теми же параметрами)
 - перезаписать
 - выдать ошибку
 - создать отдельный файл с похожим названием ( (что-то вроде 100(1).up), правила генерации новых имен должны быть описаны.
4. Что является выходными данными еще:
 - Графики
 - Гистограммы 
(зависит от задачи). Если сортировки, то: сравнения, обмены, время


Проблемы с реализацией и экспериментами:
1. Если вы пишете на Java, то есть выбросы, и измерения времени необходимо проводить несколько раз, во избежания неправильных измерений. Затем выкидываются самые маленькие и самые большие значения, остальные усредняются, и затем отображаются в графиках и гистограммах.


Защита должна проводиться по презентации

